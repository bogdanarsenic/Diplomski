import { HistoryManager } from './history';
import { PluginManager } from './plugins';
import { ProbeManager } from './probes';
export class AuguryCore {
    constructor(probes, plugins, ngZone, ngModule) {
        this.probeManager = new ProbeManager(probes, ngZone, ngModule);
        this.historyManager = new HistoryManager();
        this.pluginManager = new PluginManager(plugins, this);
        this.probeManager.subscribe(event => this.historyManager.addEvent(event));
    }
    registerEventProjection(projection, handleResult) {
        return this.probeManager.subscribe(event => {
            if (projection.process(event)) {
                const result = projection.collectResult();
                if (result) {
                    handleResult(result);
                }
            }
        });
    }
    projectFirstResultFromHistory(projection, startEventId = null, endEventId = null) {
        const results = this.projectResultsFromHistory(projection, 1, startEventId, endEventId);
        return results.length > 0 ? results[0] : null;
    }
    projectResultsFromHistory(projection, maxResults = null, startEventId = null, endEventId = null) {
        return this.historyManager.projectResults(projection, maxResults, startEventId, endEventId);
    }
}
//# sourceMappingURL=augury-core.class.js.map